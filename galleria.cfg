// Global configuration and settings file for Galleria

const settings = {
  // Set to true if you want large images to be zoomed out to fit the browser window.
  // Set to false otherwise. Can also be toggled when viewing images with the <F> key.
  fitToPage: true,
  // Set to true if you want natural sorting of the gallery name
  // This avoids gallery '001' being displayed after gallery '100', even if it is defined
  // before it in galleria.js, since Javascript improperly sorts numeric values by default.
  sortGalleryNames: true,
  // Default image extension (can be overridden on a gallery by gallery basis).
  defaultExtension: ".svg",
  // Image extensions to process (for the scripts)
  knownExtensions: [ ".bmp", ".gif", ".jpeg", ".jpg", ".png", ".tga", ".tif", ".svg", ".webp" ],
  // List of directories to ignore (for the scripts)
  ignoreDirectories: [ "lost+found", "Trash", "Ignore Me" ],
  // Maximum default dimensions for thumbnails.
  thumbnailMaxWidth: "400px",
  thumbnailMaxHeight: "400px",
  // Maximum number of galleries to be displayed for each page
  galleriesPerPage: 48,
  // Default fonts for main content and overlay info
  defaultFont: "1em Tahoma",
  defaultInfoFont: "Caption",
  // Default font color for main content and overlay info
  defaultTextColor: "Pink",
  defaultInfoTextColor: "DarkTurquoise",
  // Default arrow color.
  defaultArrowColor: "#383838",
  // Default overlay info background opacity.
  defaultInfoOpacity: 0.7,
  // Default backgroung color
  defaultBackgroundColor: "black",
  // Name of the JSON file that may reside in each gallery (for scripts)
  jsonFile: "data.json",
  // If you have the JSON file above in your image folder, you can insert some of its
  // values into your 'galleria.js' data. For instance, if you have 'title' defined as
  // a JSON value, the following will insert it as 'altName' so that Galleria uses it
  // as the gallery name. Alternatively, you can also insert the JSON data as is, such
  // as 'artist', 'tags' and 'comments', as done below.
  jsonConvert: { "title": "altName", "artist": "artist", "type": "type", "tags": "tags", "comments": "comments" },
  // Gallery attributes to overlay when the user presses <I>.
  infoDisplay: [ "images", "artist", "tags", "comments" ],
};
